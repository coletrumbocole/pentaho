<data:sql-datasource xmlns:data="http://jfreereport.sourceforge.net/namespaces/datasources/sql">
<data:config label-mapping="true"/><data:connection><data:driver>org.gjt.mm.mysql.Driver</data:driver><data:url>jdbc:mysql://localhost:50001/mifostenant-default</data:url><data:properties><data:property name="user">cole</data:property><data:property name="password">encrypted:012040435c02575857071a</data:property><data:property name="::pentaho-reporting::port">50001</data:property><data:property name="::pentaho-reporting::name">HaedrianMifos</data:property><data:property name="::pentaho-reporting::database-name">mifostenant-default</data:property><data:property name="::pentaho-reporting::hostname">localhost</data:property><data:property name="::pentaho-reporting::database-type">MYSQL</data:property></data:properties></data:connection><data:global-script language="ECMAScript">




// This is a template to demonstrate the existing functions
// you can use in a global data-source script. All functions and
// global variables you define here will be available for the
// all query scripts.
//
// Feel free to delete any function you don't use.
//
// you can process scripts via
//   scriptHelper.eval(&quot;println ('Hello World');&quot;, &quot;ECMAscript&quot;);
//
// or your can load your own ECMA/JavaScript files and execute them via
//   scriptHelper.evalFile (&quot;/your/file/here.js&quot;, &quot;ECMAscript&quot;);
//
// both inline scripts and files will be executed in the global context -
// any function or variable defined there will be available globally.
//
// The following global variables exist by default:
//    resourceManager : The ResourceManager can be used to load files
//    contextKey      : ResourceKey the context key points to the prpt-bundle
//    dataFactory     : The current datafactory instance
//    configuration   : The current report configuration
//    resourceBundleFactory : Access to translations and locale information

function init(dataRow)
{
  // place all initialization logic here. This is the right space to
  // prepare complex lookup tables or to fill global variables.

  // this method is called once when the data-source is first used.
     var tenantUrl = dataRow.get(&quot;tenantUrl&quot;);
    var user = dataRow.get(&quot;username&quot;);
    var password = dataRow.get(&quot;password&quot;);
    dataFactory.getConnectionProvider().setProperty(&quot;user&quot;, user);
    dataFactory.getConnectionProvider().setProperty(&quot;password&quot;, password);
    dataFactory.getConnectionProvider().setUrl(tenantUrl);

}

function shutdown()
{
  // place all shutdown logic here. If you use any persistent resources
  // like files or connections make sure you close them here.

  // this method is called once during the data-source shut-down. It
  // will be called after all query scripts have been shut down.

}
            </data:global-script>
  <data:query-definitions>
    <data:query name="DRpentaho"><data:static-query>select o.name as BranchName, concat(s.firstname,&quot; &quot;, s.lastname) as MFO, format(sum(l.principal_amount), &quot;Currency&quot;) as LoanAmt, count(l.id) as Loans, format(sum(l.principal_outstanding_derived), &quot;Currency&quot;) as OutBalPrin, count( laa.loan_id ) as ArrearsNo, format( sum( laa.principal_overdue_derived ) &quot;Currency&quot; ) as ArrearsAmt, format( sum( if( laa.overdue_since_date_derived &gt;= date_sub( curdate(), INTERVAL 7 DAY ), laa.principal_overdue_derived, 0) ), &quot;Currency&quot; ) as NewArrears, round( sum(if(laa.principal_overdue_derived&gt;0,l.principal_outstanding_derived,0))/sum(l.principal_outstanding_derived),2) as PARAmt,round(sum(laa.principal_overdue_derived)/sum(l.principal_outstanding_derived),4) as DRAmt,round(count(laa.loan_id)/count(l.id),4) as DRNo From (m_loan l left join m_staff s on l.loan_officer_id = s.id) left join m_office o on s.office_id = o.id left join m_loan_arrears_aging laa on laa.loan_id = l.id left join r_enum_value r on r.enum_id = l.loan_status_id where r.enum_value in (&quot;Approved&quot;,&quot;Active&quot;,&quot;Overpaid&quot;) group by s.firstname</data:static-query></data:query></data:query-definitions></data:sql-datasource>
